Given an array of size N, find the majority element. The majority element is the element that appears more than floor(N/2) times.
You may assume that the array is non-empty and the majority element always exist in the array.
Problem Constraints
1 <= |A| <= 106
1 <= Ai <= 109
Input Format
The first argument is an integer array A.
Output Format
Return the majority element.
Example Input
A = [2, 1, 2]
Example Output
2
Example Explanation
2 occurs 2 times which is greater than 3/2.

class Solution:
    def majorityElement(self, nums):
        candidate = None
        count = 0

        # Step 1: Find a potential candidate
        for num in nums:
            if count == 0:
                candidate = num
                count = 1
            elif num == candidate:
                count += 1
            else:
                count -= 1

        # Step 2: Verify if the candidate is the majority element
        count = 0
        for num in nums:
            if num == candidate:
                count += 1

        if count > len(nums) // 2:
            return candidate
        else:
            return None

